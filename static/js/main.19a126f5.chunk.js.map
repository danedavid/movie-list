{"version":3,"sources":["components/common/index.js","components/common/Spinner.js","services/http.js","services/localStorage.js","apis/index.js","components/Header.js","utils/context.js","components/Listing/ListLayout.js","utils/trim.js","components/Listing/MovieCard.js","components/Listing/GenericList.js","components/Listing/MyList.js","components/Listing/GenreList.js","components/Listing/MoviesByGenre.js","components/Listing/index.js","components/App.js","index.js"],"names":["Spinner","Pane","display","alignItems","justifyContent","height","httpService","this","apiKey","baseURL","url","parts","split","axios","get","processURL","localStorageService","key","str","localStorage","getItem","JSON","parse","value","setItem","stringify","item","data","push","set","itemId","filter","storeItem","id","getMoviesByGenre","page","http","Header","useSetState","list","error","loading","movies","setMovies","fetchPopular","a","console","log","results","useEffect","className","clickToChange","slidesPerPage","autoPlay","animationSpeed","infinite","map","movie","src","backdrop_path","alt","AddMovieContext","React","createContext","ListLayout","children","title","length","slice","noop","MovieCard","onCardClick","showDeleteButton","classNames","onClick","IconButton","position","left","top","opacity","icon","intent","poster_path","trim","Icon","color","vote_average","moment","release_date","format","overview","GenericList","arrows","MyList","deleteMovie","GenreList","genre","addMovie","useContext","fetchGenreMovies","name","MoviesByGenre","useState","genres","setGenres","fetchGenres","Listing","fetchMovies","Promise","resolve","reject","err","useCallback","find","mov","add","addMovieToStorage","prev","movieId","remove","deleteMovieFromStorage","Provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAEaA,ECCS,WACpB,OACE,kBAACC,EAAA,EAAD,CAAMC,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAASC,OAAO,SACtE,kBAACL,EAAA,EAAD,Q,iCCcSM,EAFK,I,WAflB,aAAe,oBACbC,KAAKC,OAAL,mCACAD,KAAKE,QAAL,+B,uDAGSC,GACT,IAAMC,EAAQD,EAAIE,MAAM,KACxB,MAAM,GAAN,OAAUL,KAAKE,SAAf,OAAyBE,EAAM,GAA/B,oBAA6CJ,KAAKC,OAAlD,YAA4DG,EAAM,M,0BAGhED,GACF,OAAOG,IAAMC,IAAIP,KAAKQ,WAAWL,Q,MCkBtBM,EAFa,I,WA7B1B,aAAe,oBACbT,KAAKU,IAAL,kB,kDAIA,IAAMC,EAAMC,aAAaC,QAAQb,KAAKU,KACtC,OAAKC,EACIG,KAAKC,MAAMJ,GAEX,K,0BAIPK,GACFJ,aAAaK,QAAQjB,KAAKU,IAAKI,KAAKI,UAAUF,M,0BAG5CG,GACF,IAAMC,EAAOpB,KAAKO,MAClBa,EAAKC,KAAKF,GACVnB,KAAKsB,IAAIF,K,6BAGJG,GACL,IAAMH,EAAOpB,KAAKO,MAClBP,KAAKsB,IAAIF,EAAKI,QAAO,SAAAC,GAAS,OAAIA,EAAUC,KAAOH,U,MCnB1CI,EAAmB,SAAC,GAAsB,IAApBD,EAAmB,EAAnBA,GAAmB,EAAfE,KACrC,OAAOC,EAAKtB,IAAL,sCAAwCmB,K,iBCiElCI,G,OAlEA,WAAO,IAAD,EACSC,YAAY,CACtCC,KAAM,GACNC,OAAO,EACPC,SAAS,IAJQ,mBACZC,EADY,KACJC,EADI,KAObC,EAAY,uCAAG,8BAAAC,EAAA,+EDFdT,EAAKtB,IAAL,kBCEc,gBAETa,EAFS,EAETA,KACRmB,QAAQC,IAAIpB,GACZgB,EAAU,CAAEJ,KAAMZ,EAAKqB,QAASP,SAAS,IAJxB,gDAMjBE,EAAU,CAAEF,SAAS,EAAOD,OAAO,IACnCM,QAAQN,MAAR,MAPiB,yDAAH,qDAelB,OAJAS,qBAAU,WACRL,MACC,IAGD,yBAAKM,UAAU,oBAEXR,EAAOD,QACH,kBAAC,EAAD,MAEAC,EAAOF,MACL,uBAEA,oCACE,yBAAKU,UAAU,+BACb,yBAAKA,UAAU,gBAAf,cAEF,kBAAC,IAAD,CACEC,eAAa,EACbC,cAAe,EACfC,SAAU,IACVC,eAAgB,IAChBC,UAAQ,GAGNb,EAAOH,KAAKiB,KAAI,SAAAC,GACd,OACE,yBACExC,IAAKwC,EAAMxB,GACXiB,UAAU,iBAEV,yBACEQ,IAAG,yCAAoCD,EAAME,eAC7CC,IAAI,oB,QCtDjBC,EAFSC,IAAMC,cAAc,MCa7BC,G,OAZI,SAAC,GAGb,IAFLC,EAEI,EAFJA,SACAC,EACI,EADJA,MAEA,OACE,yBAAKhB,UAAU,eACb,wBAAIA,UAAU,cAAcgB,GAC3BD,K,iBCVQ,WAAC/C,GAAuB,IAAlBiD,EAAiB,uDAAR,IAC5B,MAAM,GAAN,OACEjD,EAAIkD,MAAM,EAAGD,IADf,OAGGjD,EAAIiD,OAASA,EAAU,MAAQ,K,mCCG9BE,G,OAAO,cA+CEC,EA7CG,SAAC,GAIZ,IAHLb,EAGI,EAHJA,MAGI,IAFJc,mBAEI,MAFUF,EAEV,EADJG,EACI,EADJA,iBAEA,OACE,yBACEtB,UAAWuB,IAAW,CACpB,MAAQ,EACR,WAAcD,IAEhBE,QAAS,WACDF,GACJD,MAIHC,GAAqB,kBAACG,EAAA,EAAD,CACpBC,SAAS,WACTC,KAAK,OACLC,IAAI,OACJC,QAAQ,IACRC,KAAK,QACLC,OAAO,SACPP,QAASH,IAEX,yBACErB,UAAU,SACVQ,IAAG,yCAAoCD,EAAMyB,aAC7CtB,IAAI,WAEN,yBAAKV,UAAU,gBACb,yBAAKA,UAAU,cAAciC,EAAK1B,EAAMS,MAAO,KAC/C,yBAAKhB,UAAU,eACb,kBAACkC,EAAA,EAAD,CAAMJ,KAAK,OAAOK,MAAM,YACxB,8BAAO5B,EAAM6B,cAFf,WAIE,8BAAOC,IAAO9B,EAAM+B,aAAc,cAAcC,OAAO,UAEzD,yBAAKvC,UAAU,aAAaiC,EAAK1B,EAAMiC,cCxCzCrB,G,aAAO,cAoDEsB,EAlDK,SAAC,GAOd,IANLzB,EAMI,EANJA,MACAzB,EAKI,EALJA,QACAD,EAII,EAJJA,MACAD,EAGI,EAHJA,KAGI,IAFJgC,mBAEI,MAFUF,EAEV,MADJG,wBACI,SACJ,OACE,kBAAC,EAAD,CAAYN,MAAOA,GAEfzB,EACE,kBAAC,EAAD,MAEAD,EACE,uBAEkB,IAAhBD,EAAK4B,OAED,yBAAKjB,UAAU,mBACb,wBAAIA,UAAU,iBAAd,2CAKF,kBAAC,IAAD,CACEE,cAAe,EACfwC,QAAM,GAGJrD,EAAKiB,KAAI,SAAAC,GACP,OACE,kBAAC,EAAD,CACEc,YAAa,kBAAMA,EAAYd,IAC/BxC,IAAKwC,EAAMxB,GACXwB,MAAOA,EACPe,iBAAkBA,UC9B/BqB,EAbA,SAAC,GAA6B,IAA3BnD,EAA0B,EAA1BA,OAAQoD,EAAkB,EAAlBA,YACxB,OACE,kBAAC,EAAD,CACE5B,MAAM,UACNzB,QAASC,EAAOD,QAChBD,MAAOE,EAAOF,MACdD,KAAMG,EAAOH,KACbgC,YAAa,SAAAd,GAAK,OAAIqC,EAAYrC,IAClCe,kBAAgB,KCkCPuB,EAtCG,SAAC,GAEZ,IADLC,EACI,EADJA,MACI,EACwB1D,YAAY,CACtCC,KAAM,GACNC,OAAO,EACPC,SAAS,IAJP,mBACGC,EADH,KACWC,EADX,KAMEsD,EAAWC,qBAAWrC,GAEtBsC,EAAgB,uCAAG,8BAAAtD,EAAA,+EAEEX,EAAiB,CACtCD,GAAI+D,EAAM/D,KAHS,gBAEbN,EAFa,EAEbA,KAGRgB,EAAU,CAAEF,SAAS,EAAOF,KAAMZ,EAAKqB,UALlB,gDAQrBL,EAAU,CAAEF,SAAS,EAAOD,OAAO,IACnCM,QAAQN,MAAR,MATqB,yDAAH,qDAiBtB,OAJAS,qBAAU,WACRkD,MACC,IAGD,kBAAC,EAAD,CACEjC,MAAO8B,EAAMI,KACb3D,QAASC,EAAOD,QAChBD,MAAOE,EAAOF,MACdD,KAAMG,EAAOH,KACbgC,YAAa,SAACd,GAAD,OAAWwC,EAASxC,OCoBxB4C,EApDO,WAAO,IAAD,EACEC,mBAAS,CACnC7D,SAAS,EACTD,OAAO,EACPb,KAAM,KAJkB,mBACnB4E,EADmB,KACXC,EADW,KAOpBC,EAAW,uCAAG,8BAAA5D,EAAA,+ETXbT,EAAKtB,IAAL,qBSWa,gBAERa,EAFQ,EAERA,KACR6E,EAAU,CACR/D,SAAS,EACTD,OAAO,EACPb,KAAMA,EAAK4E,SANG,gDAShBzD,QAAQN,MAAR,MATgB,yDAAH,qDAiBjB,OAJAS,qBAAU,WACRwD,MACC,IAGD,6BAEIF,EAAO9D,QAEL,kBAAC,EAAD,MAEA8D,EAAO/D,MAEL,qDAEA,6BACG+D,EAAO5E,KAAK6B,KAAI,SAACwC,GAChB,OACE,kBAAC,EAAD,CACEA,MAAOA,EACP/E,IAAK+E,EAAM/D,WCahByE,EAlDC,WAAO,IAAD,EACQpE,YAAY,CACtCC,KAAM,GACNC,OAAO,EACPC,SAAS,IAJS,mBACbC,EADa,KACLC,EADK,KAOdgE,EAAW,uCAAG,4BAAA9D,EAAA,+EVYb,IAAI+D,SAAQ,SAACC,EAASC,GAC3B,IACED,EAAQ1F,EAAaL,OACrB,MAAOiG,GACPD,EAAOC,OUhBS,OAEVxE,EAFU,OAGhBI,EAAU,CAAEF,SAAS,EAAOF,SAHZ,gDAKhBI,EAAU,CAAEF,SAAS,EAAOD,OAAO,IACnCM,QAAQN,MAAR,MANgB,yDAAH,qDAUXyD,EAAWe,uBAAY,SAACvD,GACtBf,EAAOH,KAAK0E,MAAK,SAAAC,GAAG,OAAIA,EAAIjF,KAAOwB,EAAMxB,SVd3B,SAAC,GAAe,IAAbwB,EAAY,EAAZA,MAClB,IAAImD,SAAQ,SAACC,EAASC,GAC3B,IACiB3F,EAAaL,MACfmG,MAAK,SAAAC,GAAG,OAAIA,EAAIjF,KAAOwB,EAAMxB,OACxCd,EAAagG,IAAI1D,GAEnBoD,IACA,MAAOE,GACPD,EAAOC,OUMPK,CAAkB,CAAE3D,UACpBd,GAAU,SAAA0E,GAAI,MAAK,CACjB9E,KAAK,GAAD,mBAAM8E,EAAK9E,MAAX,CAAiBkB,WAGxB,CAACf,EAAOH,KAAMI,IAajB,OAJAM,qBAAU,WACR0D,MACC,IAGD,oCACE,kBAAC,EAAD,CACEjE,OAAQA,EACRoD,YAfc,SAACrC,IVEI,SAAC,GAAiB,IAAf6D,EAAc,EAAdA,QACrB,IAAIV,SAAQ,SAACC,EAASC,GAC3B,IACE3F,EAAaoG,OAAOD,GACpBT,IACA,MAAOE,GACPD,EAAOC,OUPTS,CAAuB,CAAEF,QAAS7D,EAAMxB,KACxCU,GAAU,SAAA0E,GAAI,MAAK,CACjB9E,KAAM8E,EAAK9E,KAAKR,QAAO,SAAAmF,GAAG,OAAIA,EAAIjF,KAAOwB,EAAMxB,aAc/C,kBAAC,EAAgBwF,SAAjB,CAA0BlG,MAAO0E,GAC/B,kBAAC,EAAD,SCzCOyB,G,OATH,WACV,OACE,yBAAKxE,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,SCJNyE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.19a126f5.chunk.js","sourcesContent":["import _Spinner from './Spinner';\n\nexport const Spinner = _Spinner;","import React from 'react';\nimport { Spinner, Pane } from 'evergreen-ui';\n\nconst CustomSpinner = () => {\n  return (\n    <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height=\"280px\">\n      <Spinner />\n    </Pane>\n  );\n};\n\nexport default CustomSpinner;","import axios from 'axios';\n\nclass HttpService {\n  constructor() {\n    this.apiKey = `9be5962f75cabd26c04eb4443674e0d2`;\n    this.baseURL = `https://api.themoviedb.org/3`;\n  }\n\n  processURL(url) {\n    const parts = url.split('?');\n    return `${this.baseURL}${parts[0]}?api_key=${this.apiKey}&${parts[1]}`;\n  }\n\n  get(url) {\n    return axios.get(this.processURL(url));\n  }\n}\n\nconst httpService = new HttpService();\n\nexport default httpService;","class LocalStorageService {\n  constructor() {\n    this.key = `tmdb-saved-list`;\n  }\n\n  get() {\n    const str = localStorage.getItem(this.key);\n    if ( str ) {\n      return JSON.parse(str);\n    } else {\n      return [];\n    }\n  }\n\n  set(value) {\n    localStorage.setItem(this.key, JSON.stringify(value));\n  }\n\n  add(item) {\n    const data = this.get();\n    data.push(item);\n    this.set(data);\n  }\n\n  remove(itemId) {\n    const data = this.get();\n    this.set(data.filter(storeItem => storeItem.id !== itemId));\n  }\n}\n\nconst localStorageService = new LocalStorageService();\n\nexport default localStorageService;","import http from 'services/http';\nimport localStorage from 'services/localStorage';\n\nexport const getGenres = () => {\n  return http.get(`/genre/movie/list`);\n};\n\nexport const getMoviesByGenre = ({ id, page = 1 }) => {\n  return http.get(`/discover/movie?with_genres=${id}`);\n};\n\nexport const getPopularMovies = () => {\n  return http.get(`/movie/popular`);\n};\n\nexport const addMovie = ({ movie }) => {\n  return new Promise((resolve, reject) => {\n    try {\n      const movies = localStorage.get();\n      if ( !movies.find(mov => mov.id === movie.id) ) {\n        localStorage.add(movie);\n      }\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\nexport const getMyList = () => {\n  return new Promise((resolve, reject) => {\n    try {\n      resolve(localStorage.get());\n    } catch (err) {\n      reject(err);\n    }\n  });\n};\n\nexport const deleteMovie = ({ movieId }) => {\n  return new Promise((resolve, reject) => {\n    try {\n      localStorage.remove(movieId);\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n};","import React, { useEffect } from 'react';\nimport useSetState from '@danedavid/usesetstate';\nimport { Spinner } from 'components/common';\nimport { getPopularMovies } from 'apis';\nimport Carousel from '@brainhubeu/react-carousel';\nimport 'styles/Header.css';\n\nconst Header = () => {\n  const [movies, setMovies] = useSetState({\n    list: [],\n    error: false,\n    loading: true,\n  });\n\n  const fetchPopular = async () => {\n    try {\n      const { data } = await getPopularMovies();\n      console.log(data)\n      setMovies({ list: data.results, loading: false });\n    } catch (err) {\n      setMovies({ loading: false, error: true });\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchPopular();\n  }, []);\n\n  return (\n    <div className=\"header-container\">\n      {\n        movies.loading\n          ? <Spinner/>\n          : (\n            movies.error\n            ? 'Something went wrong'\n            : (\n              <>\n                <div className=\"header-overlay overlay-left\">\n                  <div className=\"header-title\">MovieList</div>\n                </div>\n                <Carousel\n                  clickToChange\n                  slidesPerPage={2}\n                  autoPlay={3000}\n                  animationSpeed={1000}\n                  infinite\n                >\n                  {\n                    movies.list.map(movie => {\n                      return (\n                        <div\n                          key={movie.id}\n                          className=\"header-banner\"\n                        >\n                          <img\n                            src={`http://image.tmdb.org/t/p/w780/${movie.backdrop_path}`}\n                            alt=\"banner\"\n                          />\n                        </div>\n                      )\n                    })\n                  }\n                </Carousel>\n              </>\n            )\n          )\n      }\n    </div>\n  );\n};\n\nexport default Header;","import React from 'react';\n\nconst AddMovieContext = React.createContext(null);\n\nexport default AddMovieContext;","import React from 'react';\nimport 'styles/ListLayout.css';\n\nconst ListLayout = ({\n  children,\n  title,\n}) => {\n  return (\n    <div className=\"list-layout\">\n      <h3 className=\"list-title\">{title}</h3>\n      {children}\n    </div>\n  );\n};\n\nexport default ListLayout;","export default (str, length = 120) => {\n  return `${\n    str.slice(0, length)\n  }${\n    (str.length > length) ? '...' : ''\n  }`\n};","import React from 'react';\nimport classNames from 'classnames';\nimport trim from 'utils/trim';\nimport { Icon, IconButton } from 'evergreen-ui';\nimport moment from 'moment';\nimport 'styles/MovieCard.css';\n\nconst noop = () => {};\n\nconst MovieCard = ({\n  movie,\n  onCardClick = noop,\n  showDeleteButton\n}) => {\n  return (\n    <div\n      className={classNames({\n        \"card\": true,\n        \"clickable\": !showDeleteButton,\n      })}\n      onClick={() => {\n        if ( !showDeleteButton ) {\n          onCardClick();\n        }\n      }}\n    >\n      {showDeleteButton && (<IconButton\n        position=\"absolute\"\n        left=\"20px\"\n        top=\"20px\"\n        opacity=\"0\"\n        icon=\"trash\"\n        intent=\"danger\"\n        onClick={onCardClick}\n      />)}\n      <img\n        className=\"poster\"\n        src={`http://image.tmdb.org/t/p/w342/${movie.poster_path}`}\n        alt=\"poster\"\n      />\n      <div className=\"card-overlay\">\n        <div className=\"card-title\">{trim(movie.title, 40)}</div>\n        <div className=\"card-rating\">\n          <Icon icon=\"star\" color=\"warning\" />\n          <span>{movie.vote_average}</span>\n          &nbsp;&middot;\n          <span>{moment(movie.release_date, 'YYYY-MM-DD').format('YYYY')}</span>\n        </div>\n        <div className=\"card-info\">{trim(movie.overview)}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;","import React from 'react';\nimport { Spinner } from 'components/common';\nimport ListLayout from './ListLayout';\nimport MovieCard from './MovieCard';\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\nimport 'styles/GenericList.css';\n\nconst noop = () => {};\n\nconst GenericList = ({\n  title,\n  loading,\n  error,\n  list,\n  onCardClick = noop,\n  showDeleteButton = false,\n}) => {\n  return (\n    <ListLayout title={title}>\n      {\n        loading\n        ? <Spinner/>\n        : (\n          error\n          ? 'Something went wrong'\n          : (\n              list.length === 0\n                ? (\n                  <div className=\"empty-container\">\n                    <h3 className=\"empty-message\">\n                      Nothing here! Scroll to discover more!\n                    </h3>\n                  </div>\n                ) : (\n                  <Carousel\n                    slidesPerPage={5}\n                    arrows\n                  >\n                    {\n                      list.map(movie => {\n                        return (\n                          <MovieCard\n                            onCardClick={() => onCardClick(movie)}\n                            key={movie.id}\n                            movie={movie}\n                            showDeleteButton={showDeleteButton}\n                          />\n                        )\n                      })\n                    }\n                  </Carousel>\n                )\n          )\n        )\n      }\n    </ListLayout>\n  );\n};\n\nexport default GenericList;","import React from 'react';\nimport GenericList from './GenericList';\n\nconst MyList = ({ movies, deleteMovie }) => {\n  return (\n    <GenericList\n      title=\"My List\"\n      loading={movies.loading}\n      error={movies.error}\n      list={movies.list}\n      onCardClick={movie => deleteMovie(movie)}\n      showDeleteButton\n    />\n  )\n};\n\nexport default MyList;","import React, { useEffect, useContext } from 'react';\nimport useSetState from '@danedavid/usesetstate';\nimport AddMovieContext from 'utils/context';\nimport GenericList from './GenericList';\nimport '@brainhubeu/react-carousel/lib/style.css';\nimport { getMoviesByGenre } from 'apis';\n\nconst GenreList = ({\n  genre,\n}) => {\n  const [movies, setMovies] = useSetState({\n    list: [],\n    error: false,\n    loading: true,\n  });\n  const addMovie = useContext(AddMovieContext);\n\n  const fetchGenreMovies = async () => {\n    try {\n      const { data } = await getMoviesByGenre({\n        id: genre.id,\n      });\n      setMovies({ loading: false, list: data.results });\n      // console.log(data);\n    } catch (err) {\n      setMovies({ loading: false, error: true });\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchGenreMovies();\n  }, []);\n\n  return (\n    <GenericList\n      title={genre.name}\n      loading={movies.loading}\n      error={movies.error}\n      list={movies.list}\n      onCardClick={(movie) => addMovie(movie)}\n    />\n  );\n};\n\nexport default GenreList;","import React, {\n  useEffect,\n  useState\n} from 'react';\nimport { getGenres } from 'apis';\nimport { Spinner } from 'components/common';\nimport GenreList from './GenreList';\n\nconst MoviesByGenre = () => {\n  const [genres, setGenres] = useState({\n    loading: true,\n    error: false,\n    data: [],\n  });\n\n  const fetchGenres = async () => {\n    try {\n      const { data } = await getGenres();\n      setGenres({\n        loading: false,\n        error: false,\n        data: data.genres,\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    fetchGenres();\n  }, []);\n\n  return (\n    <div>\n      {\n        genres.loading\n        ? (\n          <Spinner/>\n        ) : (\n          genres.error\n          ? (\n            <div>Something went wrong</div>\n          ) : (\n            <div>\n              {genres.data.map((genre) => {\n                return (\n                  <GenreList\n                    genre={genre}\n                    key={genre.id}\n                  />\n                );\n              })}\n            </div>\n          )\n        )\n      }\n    </div>\n  )\n};\n\nexport default MoviesByGenre;","import React, { useEffect, useCallback } from 'react';\nimport useSetState from '@danedavid/usesetstate';\nimport {\n  getMyList,\n  addMovie as addMovieToStorage,\n  deleteMovie as deleteMovieFromStorage,\n} from 'apis';\nimport AddMovieContext from 'utils/context';\nimport MyList from './MyList';\nimport MoviesByGenre from './MoviesByGenre';\n\nconst Listing = () => {\n  const [movies, setMovies] = useSetState({\n    list: [],\n    error: false,\n    loading: true,\n  });\n\n  const fetchMovies = async () => {\n    try {\n      const list = await getMyList();\n      setMovies({ loading: false, list });\n    } catch (err) {\n      setMovies({ loading: false, error: true });\n      console.error(err);\n    }\n  };\n\n  const addMovie = useCallback((movie) => {\n    if ( !movies.list.find(mov => mov.id === movie.id) ) {\n      addMovieToStorage({ movie });\n      setMovies(prev => ({\n        list: [...prev.list, movie],\n      }));\n    }\n  }, [movies.list, setMovies]);\n\n  const deleteMovie = (movie) => {\n    deleteMovieFromStorage({ movieId: movie.id });\n    setMovies(prev => ({\n      list: prev.list.filter(mov => mov.id !== movie.id),\n    }));\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      <MyList\n        movies={movies}\n        deleteMovie={deleteMovie}\n      />\n      <AddMovieContext.Provider value={addMovie}>\n        <MoviesByGenre/>\n      </AddMovieContext.Provider>\n    </>\n  )\n};\n\nexport default Listing;","import React from 'react';\nimport Header from './Header';\nimport Listing from './Listing';\nimport 'styles/App.css';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <Header/>\n      <Listing/>\n    </div>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}